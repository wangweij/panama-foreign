// Generated by jextract

package com.sun.security.auth.module.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1 {

    static final FunctionDescriptor GetCurrentProcess$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle GetCurrentProcess$MH = RuntimeHelper.downcallHandle(
        "GetCurrentProcess",
        constants$1.GetCurrentProcess$FUNC, false
    );
    static final FunctionDescriptor GetCurrentThread$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle GetCurrentThread$MH = RuntimeHelper.downcallHandle(
        "GetCurrentThread",
        constants$1.GetCurrentThread$FUNC, false
    );
    static final FunctionDescriptor OpenProcessToken$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle OpenProcessToken$MH = RuntimeHelper.downcallHandle(
        "OpenProcessToken",
        constants$1.OpenProcessToken$FUNC, false
    );
    static final FunctionDescriptor OpenThreadToken$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle OpenThreadToken$MH = RuntimeHelper.downcallHandle(
        "OpenThreadToken",
        constants$1.OpenThreadToken$FUNC, false
    );
    static final FunctionDescriptor FreeLibrary$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle FreeLibrary$MH = RuntimeHelper.downcallHandle(
        "FreeLibrary",
        constants$1.FreeLibrary$FUNC, false
    );
    static final FunctionDescriptor DuplicateToken$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle DuplicateToken$MH = RuntimeHelper.downcallHandle(
        "DuplicateToken",
        constants$1.DuplicateToken$FUNC, false
    );
}


